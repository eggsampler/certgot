{
package nginx
}

MainDirective = val:Directives EOF
{
    return val, nil
}

Directives = val:( CommentDirective / BlockDirective / SimpleDirective )*
{
    return val, nil
}

CommentDirective "Comment" = whitespace* '#' comment:CommentText
{
    return Directive{
        Name: (strings.TrimSpace(comment.(string))),
        Comment: true,
    }, nil
}

BlockDirective "Block Directive" = whitespace* name:DirectiveName param:(DirectiveParameterList)? whitespace*  '{' whitespace* dirs:Directives whitespace* '}' whitespace*
{
    return Directive{
        Name: toString(name),
        Parameters: toStringSlice(param),
        Children: toDirectiveSlice(dirs),
    }, nil
}

SimpleDirective "Simple Directive" = whitespace* name:DirectiveName param:(DirectiveParameterList)? whitespace* ';' whitespace*
{
    return Directive{
       Name: toString(name),
       Parameters: toStringSlice(param),
    }, nil
}

CommentText = ( !newline . )*
{
    return string(c.text), nil
}

DirectiveName = [a-z_]+
{
    return string(c.text),nil
}

DirectiveParameterList = val:( SingleQuotedParameter / DoubleQuotedParameter / ParameterText )+
{
    return val, nil
}

SingleQuotedParameter = whitespace* val:SingleQuotedString whitespace*
{
    return val, nil
}

DoubleQuotedParameter = whitespace* val:DoubleQuotedString whitespace*
{
    return val, nil
}

ParameterText = whitespace* val:Characters whitespace*
{
    return val, nil
}

SingleQuotedString = `'` ( EscapedChar / (!`'` .) )* `'`
{
    return string(c.text), nil
}

DoubleQuotedString = `"` ( EscapedChar / (!`"` .) )* `"`
{
    return string(c.text), nil
}

Characters = ( EscapedChar / !( space / [;{] ) . )+
{
    return string(c.text), nil
}

EscapedChar = `\` .

space "space" = [ \t]
newline "newline" = [\r\n]
whitespace "whitespace" = space / newline
EOF = !.